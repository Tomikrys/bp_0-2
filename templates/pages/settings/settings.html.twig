{% extends 'base.html.twig' %}
{% block title %}Nastavení aplikace{% endblock %}
{% block stylesheets %}
    <style>
        h2 {
            margin-top: 20px;
        }
    </style>
    {% endblock %}
{% block body %}
    <h1>Nastavení aplikace</h1>
    <h2>Správa šablon</h2>
    <table id="template" class="table table-hover table-sm table-bordered nonfluid">
    <thead class="thead-dark">
    <tr>
        <th>Název</th>
        <th>Soubor</th>
        <th>Úpravy</th>
    </tr>
    </thead>
    <tbody>
    {% for template in templates %}
        <tr>
            <td id="template{{ template.id }}" class="without-enter" contenteditable="true">{{ template.name }}</td>
            <td id="template{{ template.id }}"><a href="{{ template.realpath }}">{{ template.displaypath }}</a></td>
            <td>
                <button onclick="edit_template(this)" class="btn btn-sm btn-primary edit-template" data-id="{{ template.id }}">Uložit</button>
                <button onclick="delete_template(this)" class="btn btn-sm btn-danger delete-template" data-id="{{ template.id }}">Smazat</button>
            </td>
        </tr>
    {% endfor %}
    </tbody>
</table>

    <h3>Přidání šablony</h3>
    <form class="md-form" action="doUpload" method="post" enctype="multipart/form-data">
        <div class="file-field">
            <input type="hidden" name="token" value="{{ csrf_token('upload') }}" />
            <label for="template_name" >Název šablony</label>
            <input class="form-control mb-1 nonfluid" type="text" id="template_name" name="template_name">
            <div class="btn btn-outline-secondary  btn-sm float-left">
                <input class="file-path validate" placeholder="Upload šablony" style="color:black; width:350px" type="file" name="myfile">
            </div>
            <button class="btn  btn-primary ml-1" type="submit">Uložit</button>
        </div>
    </form>


    <h2>Dny na menu</h2>
    <table id="days_menu" class="table table-hover table-sm table-bordered nonfluid">
        <thead class="thead-dark">
        <tr>
            <th>Název</th>
            <th>Popis</th>
            <th>Úpravy</th>
        </tr>
        </thead>
        <tbody>
        {% for day in settings.days %}
            <tr class="content_row">
                <td class="content" contenteditable="true" class="without-enter">{{ day[0] }}</td>
                <td class="content" contenteditable="true" class="without-enter">{{ day[1] }}</td>
                <td onclick="delete_row(this)" class="cursor_pointer text-center"><i class="fas fa-times"></i></td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    <button type="button" class="btn btn-success" onclick="add_row(this, 3)">Přidat řádek</button>
    <button type="button" class="btn btn-primary" onclick="save_menu_days()">Uložit</button>

    <h2>Jídla na menu</h2>
    <table id="menu_meals" class="table table-hover table-sm table-bordered nonfluid">
        <thead class="thead-dark">
        <tr>
            <th>Název</th>
            <th>Úpravy</th>
        </tr>
        </thead>
        <tbody>
        {% for meal in settings.meals %}
        <tr>
            <td class="content" class="without-enter" contenteditable="true">{{ meal }}</td>
            <td onclick="delete_row(this)" class="cursor_pointer text-center"><i class="fas fa-times"></i></td>
        </tr>
        {% endfor %}
        </tbody>
    </table>
    <button type="button" class="btn btn-success" onclick="add_row(this, 2)">Přidat řádek</button>
    <button type="button" class="btn btn-primary" onclick="save_menu_meals()">Uložit</button>


    <h2>Typy jídel</h2>
    <small>Nutno zatím ukládat po jednom. Ostatní neuložené se smažou.</small>
    <table id="types_settings" class="table table-hover table-sm table-bordered nonfluid">
        <thead class="thead-dark">
        <tr>
            <th>Název</th>
            <th>Úpravy</th>
        </tr>
        </thead>
        <tbody>
        {% for type in types %}
            <tr>
                <td id="type{{ type.id }}" class="without-enter" contenteditable="true">{{ type.name }}</td>
                <td>
                    <button onclick="edit_type(this)" class="btn btn-sm btn-primary edit-tag" data-id="{{ type.id }}">Uložit</button>
                    <button onclick="delete_type(this)" class="btn btn-sm btn-danger delete-tag" data-id="{{ type.id }}">Smazat</button>
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    <button type="button" class="btn btn-success" onclick="add_row_type(this)">Přidat řádek</button>

    <h2>Tagy jídel</h2>
    <small>Nutno zatím ukládat po jednom. Ostatní neuložené se smažou.</small>
    <table id="days_menu" class="table table-hover table-sm table-bordered nonfluid">
        <thead class="thead-dark">
        <tr>
            <th>Název</th>
            <th>Úpravy</th>
        </tr>
        </thead>
        <tbody>
        {% for tag in tags %}
            <tr>
                <td id="tag{{ tag.id }}" class="without-enter" contenteditable="true">{{ tag.name }}</td>
                <td>
                    <button onclick="edit_tag(this)" class="btn btn-sm btn-primary edit-tag" data-id="{{ tag.id }}">Uložit</button>
                    <button onclick="delete_tag(this)" class="btn btn-sm btn-danger delete-tag" data-id="{{ tag.id }}">Smazat</button>
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    <button type="button" class="btn btn-success" onclick="add_row_tag(this)">Přidat řádek</button>

    <h2 id="import">Import jídel</h2>
    <p>Jediný akceptovaný formát:<br><code>Název|Popis jídla|Cena|Typ|Tag|Tag</code><br>
    Počet tagů není omezen a nejsou povinné. Pokud tag či typ neexistuje je vytvořen.</p>
    <form action="javascript:void(0);">
        <textarea class="form-control" name="csv" rows="10"></textarea>
        <button onclick="importCSV(this.form)" type="submit" class="btn btn-primary mt-1 mb-2">Importovat</button>
    </form>
{% endblock %}

{% block javascripts %}
<script>
    $(document).ready(function() {
        without_enter_listener();
    });
    function without_enter_listener() {
        $(".without-enter").keydown(function (event) {
            // Allow: backspace, delete, tab, escape, and enter
            if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 ||
                // Allow: Ctrl+A
                (event.keyCode == 65 && event.ctrlKey === true) ||
                // Allow: home, end, left, right
                (event.keyCode >= 35 && event.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            let enter = ['\n'];
            if (!enter.includes(event.key)) {
                event.preventDefault();
            }
        });
    }

    function edit_template(e) {
        $("#loading").modal("show");
        // vytežení infa z tabulky
        const id = e.getAttribute('data-id');
        const name = document.getElementById("template" + id).innerText;

        // nacpání do struktury
        const data = {
            id: id,
            name: name
        };

        // odeslání do FoodController
        try {
            const response = fetch('/settings/edit/template', {
                method: 'POST', // or 'PUT'
                body: JSON.stringify(data), // data can be `string` or {object}!
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(res => window.location.reload());
            const json = response.json();
            console.log('Success:', JSON.stringify(json));
        } catch (error) {
            console.error('Error:', error);
        }
        $("#loading").modal("hide");
    }

    function edit_type(e) {
        $("#loading").modal("show");
        // vytežení infa z tabulky
        const id = e.getAttribute('data-id');
        const name = document.getElementById("type" + id).innerText;

        // nacpání do struktury
        const data = {
            id: id,
            name: name
        };

        // odeslání do FoodController
        try {
            const response = fetch('/settings/edit/type', {
                method: 'POST', // or 'PUT'
                body: JSON.stringify(data), // data can be `string` or {object}!
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(res => window.location.reload());
            const json = response.json();
            console.log('Success:', JSON.stringify(json));
        } catch (error) {
            console.error('Error:', error);
        }
        $("#loading").modal("hide");
    }

    function edit_tag(e) {
        $("#loading").modal("show");
        // vytežení infa z tabulky
        const id = e.getAttribute('data-id');
        const name = document.getElementById("tag" + id).innerText;

        // nacpání do struktury
        const data = {
            id: id,
            name: name
        };

        // odeslání do FoodController
        try {
            const response = fetch('/settings/edit/tag', {
                method: 'POST', // or 'PUT'
                body: JSON.stringify(data), // data can be `string` or {object}!
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(res => window.location.reload());
            const json = response.json();
            console.log('Success:', JSON.stringify(json));
        } catch (error) {
            console.error('Error:', error);
        }
        $("#loading").modal("hide");
    }

    function delete_tag(e) {
        if (confirm('Opravdu?')) {
            $("#loading").modal("show");
            const id = e.getAttribute('data-id');

            fetch(`/settings/delete/tag/${id}`, {
                method: 'DELETE'
            }).then(res => window.location.reload());
        }
        $("#loading").modal("hide");
    }

    function delete_template(e) {
        if (confirm('Opravdu?')) {
            $("#loading").modal("show");
            const id = e.getAttribute('data-id');

            fetch(`/settings/delete/template/${id}`, {
                method: 'DELETE'
            }).then(res => window.location.reload());
        }
        $("#loading").modal("hide");
    }

    function delete_type(e) {
        if (confirm('Opravdu?')) {
            $("#loading").modal("show");
            const id = e.getAttribute('data-id');

            fetch(`/settings/delete/type/${id}`, {
                method: 'DELETE'
            }).then(res => window.location.reload());
        }
        $("#loading").modal("hide");
    }

    function delete_row(param) {
        let to_delete = param.parentNode;
        to_delete.parentNode.removeChild(to_delete);
        console.log(to_delete);
    }

    function save_menu_days() {
        const table = document.getElementById("days_menu");
        let data_row = Array.from(table.getElementsByClassName("content_row"));
        let array = [];
        console.log(data_row);
        data_row.forEach(element => {
            let data = element.getElementsByClassName("content");
            console.log(data);
            if (data[0].innerHTML !== "") array.push([data[0].innerHTML,data[1].innerHTML])
        });
        console.log(array);

        fetch('/settings/save/days', {
            method: 'POST', // or 'PUT'
            body: JSON.stringify(array)
        }).then(res => window.location.reload());
    }

    function save_menu_meals() {
        const table = document.getElementById("menu_meals");
        let data = Array.from(table.getElementsByClassName("content"));
        let array = [];
        data.forEach(element => {
            if (element.innerHTML !== "") array.push(element.innerHTML)
        });

        fetch('/settings/save/meals', {
            method: 'POST', // or 'PUT'
            body: JSON.stringify(array)
        }).then(res => window.location.reload());
    }

    function add_row_tag(e) {
        const table = e.previousElementSibling;
        let row = table.insertRow(-1);

        let cell = row.insertCell(-1);
        cell.id = "tag-new";
        let editable = document.createAttribute("contenteditable");
        editable.value = "true";
        cell.classList.add("content");
        cell.classList.add("without-enter");
        cell.attributes.setNamedItem(editable);

        let cell_button = row.insertCell(-1);
        cell_button.innerHTML =
            '<button onclick=\"edit_tag(this)\" class=\"btn btn-sm btn-primary edit-tag\" data-id=\"-new\">Uložit</button>' +
            '<button onclick=\"delete_row(this.parentNode)\" class=\"btn btn-sm btn-danger delete-tag\">Smazat</button>';

        //cell_button.attributes.removeNamedItem("contenteditable");
        without_enter_listener();
    }

    function add_row_type(e) {
        const table = e.previousElementSibling;
        let row = table.insertRow(-1);

        let cell = row.insertCell(-1);
        cell.id = "type-new";
        let editable = document.createAttribute("contenteditable");
        editable.value = "true";
        cell.classList.add("content");
        cell.classList.add("without-enter");
        cell.attributes.setNamedItem(editable);

        let cell_button = row.insertCell(-1);
        cell_button.innerHTML =
            '<button onclick=\"edit_type(this)\" class=\"btn btn-sm btn-primary edit-type\" data-id=\"-new\">Uložit</button>' +
            '<button onclick=\"delete_row(this.parentNode)\" class=\"btn btn-sm btn-danger delete-type ml-1\">Smazat</button>';

        //cell_button.attributes.removeNamedItem("contenteditable");
        without_enter_listener();
    }

    function add_row(e, i) {
        const table = e.previousElementSibling;
        let row = table.insertRow(-1);
        row.classList.add("content_row");
        let cell = null;
        while (i > 0) {
            i--;
            cell = row.insertCell(-1);

            // přidání "editovatelnosti"
            let editable = document.createAttribute("contenteditable");
            editable.value = "true";
            cell.classList.add("content");
            cell.classList.add("without-enter");
            cell.attributes.setNamedItem(editable);
        }
         cell.outerHTML = '<td onclick=\"delete_row(this)\" class=\"cursor_pointer text-center\"><i class=\"fas fa-times\"></i></td>';
        // cell.classList.remove("content");
        // cell.innerHTML = '<i class="fas fa-times"></i>';
        // cell.attributes.removeNamedItem("contenteditable");
        without_enter_listener();
    }

    function saveMeals() {
        let menu_meals = document.getElementById("meals").textContent;

        console.log();
    }

    function importCSV(form) {
        let csv = form.csv.value;
        while (csv.indexOf('\t') > -1) {
            csv=csv.replace('\t','');
        }
        alert(csv);
        console.log(csv);
        fetch('/import', {
            method: 'POST', // or 'PUT'
            body: csv
        }).then(res => window.location.reload());
    }


</script>
{% endblock %}